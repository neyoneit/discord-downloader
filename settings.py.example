import os
from datetime import timedelta
from os.path import dirname

DISCORD_TOKEN='<token>'

CHANNELS={
    "server name--jeden kan√°l": ["server-name--v√Ωstupn√≠-kan√°l"],
    "server name--druhej kan√°l": ["server-name--v√Ωstupn√≠-kan√°l"],
    "server name--t≈ôet√≠ kan√°l": ["server-name--jeden-v√Ωstupn√≠-kan√°l", "server-name--druhej-v√Ωstupn√≠-kan√°l"],
}

STATE_DIRECTORY = os.path.join(dirname(__file__), "state")

ATTACHMENTS_DIRECTORY = os.path.join(dirname(__file__), "out", "attachments")

# Temp directory needs to be on the same drive as ATTACHMENTS_DIRECTORY.
TEMP_DIRECTORY = os.path.join(dirname(__file__), "out", "tmp")

URLS_FILE = os.path.join(dirname(__file__), "out", "urls.txt")

DEMO_RENDERING_PROVIDER = 'local-rendering'  # 'local-rendering' or 'igmdb'

IGMDB_TOKEN = '‚Ä¶'  # obtain token from https://www.igmdb.org/?page=usercp

IGMDB_POLLING_INTERVAL = 5*60  # seconds

RENDERING_OUTPUT_CHANNEL = 'server name--v√Ωstupn√≠ kan√°l'  # or RENDERING_OUTPUT_CHANNEL = ['server name--v√Ωstupn√≠ kan√°l1', 'server name--v√Ωstupn√≠ kan√°l2']

RENDERING_DONE_MESSAGE_PREFIX = "New render:\n"

RENDERING_DONE_MESSAGE_SUFFIX = "\nRendered by igmdb"

RENDERING_DONE_MESSAGE_DISCORD = "Rendered directly to Discord:"

DEMOCLEANER_EXE = os.path.join(dirname(__file__), 'DemoCleaner3.exe')

DEMO_RENDERING_LOCAL_PUBLISHING_DELAY = timedelta(minutes=0.01)

DEMO_RENDERING_LOCAL_ODFE_DIR = 'c:\\path\\to\\odfe\\dir'  # path to oDFe

DEMO_RENDERING_LOCAL_ODFE_EXECUTABLE = 'oDFe.x64.exe'

DEMO_RENDERING_LOCAL_ODFE_CONFIG = 'c:\\odfe\\config'  # path to oDFe config dir

DEMO_RENDERING_LOCAL_ODFE_DEMO = 'c:\\odfe\\demo'  # path to oDFe demo dir

DEMO_RENDERING_LOCAL_ODFE_VIDEO = 'c:\\odfe\\video-output'  # path to oDFe video dir

DEMO_RENDERING_LOCAL_ODFE_CONFIG_PREFIX = ''  # config prefix for oDFe


def demo_rendering_local_odfe_discord_config_prefix(round_id: int):
    # config prefix for Discord when upload fails.
    # At the first retry, round_id is 0, and it increases
    return f'set cl_aviPipeFormat "' \
           f'-preset slower ' \
           f'-crf {23+5*round_id} ' \
           f'-vcodec libx264 ' \
           f'-flags +cgop ' \
           f'-pix_fmt yuv420p ' \
           f'-bf 2 ' \
           f'-codec:a aac ' \
           f'-strict -2 ' \
           f'-b:a 160k ' \
           f'-r:a 22050 ' \
           f'-movflags faststart ' \
           f'"'

DEMO_RENDERING_LOCAL_YOUTUBE_EXECUTABLE = 'c:\\youtube-upload\\bin\\youtube-upload.bat'

DEMO_RENDERING_LOCAL_YOUTUBE_PARAMS = [
    '--client-secrets', '/home/user/v/credentials.json',  # client id
    '--credentials-file', '/home/user/v/user-credentials.json',  # path to credentials file
    '--chunksize=262144',  # minimum chunk size for YT is 262144
    '--rate-limit=352144', # max upload rate
]

DEMO_RENDERING_MISSING_DETAILS_REPORT_USER_ID = 783750040560336947  # https://techswift.org/2020/04/22/how-to-find-your-user-id-on-discord/

DEMO_RENDERING_LOCAL_YOUTUBE_DESCRIPTION_SUFFIX = 'description suffix'

DISCORD_MAX_VIDEO_SIZE = 100*1024*1024

REACTIONS_WIP = ['\N{HOURGLASS}']

REACTIONS_REJECTED = ['üö´', 'üí©']

REACTIONS_DONE = ['\u2714', '\u2705']

REACTIONS_FAILED = ['üí©', '‚ùå']


def already_rendered_message(url: str):
    return f"Already rendered: {url}"
